node {
    stage('Build') {
        docker.image('python:2-alpine').inside {
            sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            stash(name: 'compiled-sources', includes: 'sources/*.py*')
        }
    }

    stage('Test') {
        docker.image('qnib/pytest').inside {
            sh 'py.test --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
        }
        junit 'test-reports/results.xml'
    }

    stage('Deliver') {
        def image = 'cdrx/pyinstaller-linux:python2'
        def successFlag = true
        try {
            dir(env.BUILD_ID) {
                sh 'pwd'
                sh 'ls -l'
                unstash 'compiled-sources'
                sh "docker run --rm -v ./sources:/src ${image} 'pyinstaller -F add2vals.py'"
                sh 'ls -lR'
                sh 'pwd'
            }
        } catch (Exception e) {
            successFlag = false
            throw e
        } finally {
            if (successFlag) {
                sh "ls -l"
                sh "ls -lR ${env.BUILD_ID}"
                archiveArtifacts artifacts: "${env.BUILD_ID}/sources/dist/add2vals", fingerprint: true
                dir(env.BUILD_ID) {
                    sh "docker run --rm -v ./sources:src ${image} 'rm -rf build dist'"
                }
            }
        }
    }
}
